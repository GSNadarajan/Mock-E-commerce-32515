{"is_source_file": true, "format": "JavaScript", "description": "The PaymentModel handles the storage and retrieval of payment data using a JSON file. It provides methods for creating, updating, deleting, and searching payments, as well as initializing the payment database structure.", "external_files": ["fs", "fs-extra", "path", "uuid"], "external_methods": ["fs.promises.readFile", "fs.promises.writeFile", "fs.promises.access", "fs.promises.rename", "fsExtra.ensureDir", "uuid.v4"], "published": ["PaymentModel"], "classes": [{"name": "PaymentModel", "description": "Handles payment data operations such as initialization, creation, retrieval, updating, and deletion of payments."}], "methods": [{"name": "initialize()", "description": "Initializes the payments.json file and ensures the correct structure, creating it if necessary.", "scope": "PaymentModel", "scopeKind": "class"}, {"name": "getAllPayments()", "description": "Retrieves all payments from the JSON file.", "scope": "PaymentModel", "scopeKind": "class"}, {"name": "getPaymentById(paymentId)", "description": "Fetches a payment by its unique ID.", "scope": "PaymentModel", "scopeKind": "class"}, {"name": "getPaymentsByUserId(userId)", "description": "Fetches payments associated with a specific user ID.", "scope": "PaymentModel", "scopeKind": "class"}, {"name": "getPaymentsByOrderId(orderId)", "description": "Fetches payments associated with a specific order ID.", "scope": "PaymentModel", "scopeKind": "class"}, {"name": "createPayment(paymentData)", "description": "Creates a new payment and saves it to the payments.json file.", "scope": "PaymentModel", "scopeKind": "class"}, {"name": "updatePayment(paymentId, updateData)", "description": "Updates an existing payment identified by its ID.", "scope": "PaymentModel", "scopeKind": "class"}, {"name": "deletePayment(paymentId)", "description": "Deletes a payment identified by its ID.", "scope": "PaymentModel", "scopeKind": "class"}, {"name": "searchPayments(criteria = {})", "description": "Searches for payments that match specified search criteria.", "scope": "PaymentModel", "scopeKind": "class"}, {"name": "_readData()", "scope": "PaymentModel", "scopeKind": "class", "description": "unavailable"}, {"name": "_writeData(data)", "scope": "PaymentModel", "scopeKind": "class", "description": "unavailable"}], "calls": ["fs.promises.access", "fs.promises.readFile", "fs.promises.writeFile", "fs.promises.rename", "fsExtra.ensureDir", "uuid.v4"], "search-terms": ["paymentModel", "payments.json", "payment data operations"], "state": 2, "file_id": 90, "knowledge_revision": 235, "git_revision": "", "ctags": [{"_type": "tag", "name": "DEFAULT_DATA", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/payments/models/paymentModel.js", "pattern": "/^const DEFAULT_DATA = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "PaymentModel", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/payments/models/paymentModel.js", "pattern": "/^class PaymentModel {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "VALID_PAYMENT_METHODS", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/payments/models/paymentModel.js", "pattern": "/^const VALID_PAYMENT_METHODS = ['credit_card', 'debit_card', 'paypal', 'bank_transfer', 'crypto']/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "VALID_PAYMENT_STATUSES", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/payments/models/paymentModel.js", "pattern": "/^const VALID_PAYMENT_STATUSES = ['pending', 'completed', 'failed', 'refunded'];$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "_readData", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/payments/models/paymentModel.js", "pattern": "/^  static async _readData() {$/", "language": "JavaScript", "kind": "method", "signature": "()", "scope": "PaymentModel", "scopeKind": "class"}, {"_type": "tag", "name": "_writeData", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/payments/models/paymentModel.js", "pattern": "/^  static async _writeData(data) {$/", "language": "JavaScript", "kind": "method", "signature": "(data)", "scope": "PaymentModel", "scopeKind": "class"}, {"_type": "tag", "name": "createPayment", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/payments/models/paymentModel.js", "pattern": "/^  static async createPayment(paymentData) {$/", "language": "JavaScript", "kind": "method", "signature": "(paymentData)", "scope": "PaymentModel", "scopeKind": "class"}, {"_type": "tag", "name": "dataDir", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/payments/models/paymentModel.js", "pattern": "/^const dataDir = path.join(__dirname, '..\\/..\\/..\\/data');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "dbPath", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/payments/models/paymentModel.js", "pattern": "/^const dbPath = path.join(dataDir, 'payments.json');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "deletePayment", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/payments/models/paymentModel.js", "pattern": "/^  static async deletePayment(paymentId) {$/", "language": "JavaScript", "kind": "method", "signature": "(paymentId)", "scope": "PaymentModel", "scopeKind": "class"}, {"_type": "tag", "name": "fs", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/payments/models/paymentModel.js", "pattern": "/^const fs = require('fs').promises;$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "fsExtra", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/payments/models/paymentModel.js", "pattern": "/^const fsExtra = require('fs-extra');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "getAllPayments", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/payments/models/paymentModel.js", "pattern": "/^  static async getAllPayments() {$/", "language": "JavaScript", "kind": "method", "signature": "()", "scope": "PaymentModel", "scopeKind": "class"}, {"_type": "tag", "name": "getPaymentById", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/payments/models/paymentModel.js", "pattern": "/^  static async getPaymentById(paymentId) {$/", "language": "JavaScript", "kind": "method", "signature": "(paymentId)", "scope": "PaymentModel", "scopeKind": "class"}, {"_type": "tag", "name": "getPaymentsByOrderId", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/payments/models/paymentModel.js", "pattern": "/^  static async getPaymentsByOrderId(orderId) {$/", "language": "JavaScript", "kind": "method", "signature": "(orderId)", "scope": "PaymentModel", "scopeKind": "class"}, {"_type": "tag", "name": "getPaymentsByUserId", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/payments/models/paymentModel.js", "pattern": "/^  static async getPaymentsByUserId(userId) {$/", "language": "JavaScript", "kind": "method", "signature": "(userId)", "scope": "PaymentModel", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/payments/models/paymentModel.js", "pattern": "/^      id: uuidv4(),$/", "language": "JavaScript", "kind": "property", "scope": "PaymentModel.createPayment.newPayment", "scopeKind": "class"}, {"_type": "tag", "name": "initialize", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/payments/models/paymentModel.js", "pattern": "/^  static async initialize() {$/", "language": "JavaScript", "kind": "method", "signature": "()", "scope": "PaymentModel", "scopeKind": "class"}, {"_type": "tag", "name": "isWriting", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/payments/models/paymentModel.js", "pattern": "/^let isWriting = false;$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "newPayment", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/payments/models/paymentModel.js", "pattern": "/^    const newPayment = {$/", "language": "JavaScript", "kind": "class", "scope": "PaymentModel.createPayment", "scopeKind": "class"}, {"_type": "tag", "name": "path", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/payments/models/paymentModel.js", "pattern": "/^const path = require('path');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "payments", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/payments/models/paymentModel.js", "pattern": "/^  payments: []$/", "language": "JavaScript", "kind": "property", "scope": "DEFAULT_DATA", "scopeKind": "class"}, {"_type": "tag", "name": "schemaVersion", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/payments/models/paymentModel.js", "pattern": "/^  schemaVersion: '1.0',$/", "language": "JavaScript", "kind": "property", "scope": "DEFAULT_DATA", "scopeKind": "class"}, {"_type": "tag", "name": "searchPayments", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/payments/models/paymentModel.js", "pattern": "/^  static async searchPayments(criteria = {}) {$/", "language": "JavaScript", "kind": "method", "signature": "(criteria = {})", "scope": "PaymentModel", "scopeKind": "class"}, {"_type": "tag", "name": "transactionId", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/payments/models/paymentModel.js", "pattern": "/^      transactionId,$/", "language": "JavaScript", "kind": "field", "scope": "PaymentModel.createPayment.newPayment", "scopeKind": "class"}, {"_type": "tag", "name": "updatePayment", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/payments/models/paymentModel.js", "pattern": "/^  static async updatePayment(paymentId, updateData) {$/", "language": "JavaScript", "kind": "method", "signature": "(paymentId, updateData)", "scope": "PaymentModel", "scopeKind": "class"}], "filename": "/home/kavia/workspace/Mock-E-commerce-32515/src/payments/models/paymentModel.js", "hash": "6130921fd9fc5cb24a21d27d21d4edeb", "format-version": 4, "code-base-name": "default", "fields": [{"name": "id: uuidv4(),", "scope": "PaymentModel.createPayment.newPayment", "scopeKind": "class", "description": "unavailable"}, {"name": "let isWriting = false;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "payments: []", "scope": "DEFAULT_DATA", "scopeKind": "class", "description": "unavailable"}, {"name": "schemaVersion: '1.0',", "scope": "DEFAULT_DATA", "scopeKind": "class", "description": "unavailable"}, {"name": "transactionId,", "scope": "PaymentModel.createPayment.newPayment", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"235": ""}]}