{"is_source_file": true, "format": "JavaScript", "description": "Implements a UserModel class for managing user data, including functionalities for creating, updating, deleting, and retrieving users from a JSON file in a Node.js environment.", "external_files": ["fs", "fs-extra", "path", "uuid"], "external_methods": [], "published": ["UserModel"], "classes": [{"name": "UserModel", "description": "Class that handles user data operations including initialization, creation, retrieval, updating, and deletion of user information in a JSON file."}], "methods": [{"name": "initialize()", "description": "Ensures the user data JSON file exists and has the correct structure, creating it if necessary.", "scope": "UserModel", "scopeKind": "class"}, {"name": "getAllUsers()", "description": "Retrieves an array of all users from the JSON file.", "scope": "UserModel", "scopeKind": "class"}, {"name": "getUserById(id)", "description": "Fetches a user by their unique ID.", "scope": "UserModel", "scopeKind": "class"}, {"name": "getUserByEmail(email)", "description": "Fetches a user by their email address, ignoring case.", "scope": "UserModel", "scopeKind": "class"}, {"name": "getUserByVerificationToken(token)", "description": "Fetches a user by their email verification token.", "scope": "UserModel", "scopeKind": "class"}, {"name": "getUserByResetToken(token)", "description": "Fetches a user by their password reset token.", "scope": "UserModel", "scopeKind": "class"}, {"name": "createUser(userData)", "description": "Creates a new user with the provided details, ensuring no duplicate emails.", "scope": "UserModel", "scopeKind": "class"}, {"name": "updateUser(id, userData)", "description": "Updates the details of an existing user.", "scope": "UserModel", "scopeKind": "class"}, {"name": "deleteUser(id)", "description": "Deletes a user by their unique ID.", "scope": "UserModel", "scopeKind": "class"}, {"name": "verifyUser(token)", "description": "Verifies a user's email using a verification token.", "scope": "UserModel", "scopeKind": "class"}, {"name": "setPasswordResetToken(email, token, expiry)", "description": "Sets a password reset token and its expiry for a user identified by their email address.", "scope": "UserModel", "scopeKind": "class"}, {"name": "resetPassword(token, newPassword)", "description": "Resets a user's password using a valid reset token.", "scope": "UserModel", "scopeKind": "class"}, {"name": "findUsersByRole(role)", "description": "Finds users by their role.", "scope": "UserModel", "scopeKind": "class"}, {"name": "searchUsers(query)", "description": "Searches for users by their username or email based on a query.", "scope": "UserModel", "scopeKind": "class"}, {"name": "countUsers()", "description": "Counts the total number of users.", "scope": "UserModel", "scopeKind": "class"}, {"name": "_readData()", "scope": "UserModel", "scopeKind": "class", "description": "unavailable"}, {"name": "_writeData(data)", "scope": "UserModel", "scopeKind": "class", "description": "unavailable"}], "calls": ["fs.promises.readFile", "fs.access", "fsExtra.ensureDir", "fs.writeFile", "fs.rename"], "search-terms": ["UserModel", "user operations", "JSON user storage"], "state": 2, "file_id": 5, "knowledge_revision": 43, "git_revision": "8d0cf020db542046a443b905d4680ea8a28a859e", "revision_history": [{"15": ""}, {"34": "8d0cf020db542046a443b905d4680ea8a28a859e"}, {"43": "8d0cf020db542046a443b905d4680ea8a28a859e"}], "ctags": [{"_type": "tag", "name": "UserModel", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^class UserModel {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "_readData", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^  static async _readData() {$/", "language": "JavaScript", "kind": "method", "signature": "()", "scope": "UserModel", "scopeKind": "class"}, {"_type": "tag", "name": "_writeData", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^  static async _writeData(data) {$/", "language": "JavaScript", "kind": "method", "signature": "(data)", "scope": "UserModel", "scopeKind": "class"}, {"_type": "tag", "name": "countUsers", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^  static async countUsers() {$/", "language": "JavaScript", "kind": "method", "signature": "()", "scope": "UserModel", "scopeKind": "class"}, {"_type": "tag", "name": "createUser", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^  static async createUser(userData) {$/", "language": "JavaScript", "kind": "method", "signature": "(userData)", "scope": "UserModel", "scopeKind": "class"}, {"_type": "tag", "name": "createdAt", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^      createdAt: new Date().toISOString(),$/", "language": "JavaScript", "kind": "property", "scope": "UserModel.createUser.newUser", "scopeKind": "class"}, {"_type": "tag", "name": "dataDir", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^const dataDir = path.join(__dirname, '..\\/data');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "dbPath", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^const dbPath = path.join(dataDir, 'users.json');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "deleteUser", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^  static async deleteUser(id) {$/", "language": "JavaScript", "kind": "method", "signature": "(id)", "scope": "UserModel", "scopeKind": "class"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^      email: userData.email.toLowerCase(), \\/\\/ Store email in lowercase for case-insensitive co/", "language": "JavaScript", "kind": "property", "scope": "UserModel.createUser.newUser", "scopeKind": "class"}, {"_type": "tag", "name": "findUsersByRole", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^  static async findUsersByRole(role) {$/", "language": "JavaScript", "kind": "method", "signature": "(role)", "scope": "UserModel", "scopeKind": "class"}, {"_type": "tag", "name": "fs", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^const fs = require('fs').promises;$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "fsExtra", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^const fsExtra = require('fs-extra');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "getAllUsers", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^  static async getAllUsers() {$/", "language": "JavaScript", "kind": "method", "signature": "()", "scope": "UserModel", "scopeKind": "class"}, {"_type": "tag", "name": "getUserByEmail", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^  static async getUserByEmail(email) {$/", "language": "JavaScript", "kind": "method", "signature": "(email)", "scope": "UserModel", "scopeKind": "class"}, {"_type": "tag", "name": "getUserById", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^  static async getUserById(id) {$/", "language": "JavaScript", "kind": "method", "signature": "(id)", "scope": "UserModel", "scopeKind": "class"}, {"_type": "tag", "name": "getUserByResetToken", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^  static async getUserByResetToken(token) {$/", "language": "JavaScript", "kind": "method", "signature": "(token)", "scope": "UserModel", "scopeKind": "class"}, {"_type": "tag", "name": "getUserByVerificationToken", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^  static async getUserByVerificationToken(token) {$/", "language": "JavaScript", "kind": "method", "signature": "(token)", "scope": "UserModel", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^      id: uuidv4(),$/", "language": "JavaScript", "kind": "property", "scope": "UserModel.createUser.newUser", "scopeKind": "class"}, {"_type": "tag", "name": "initialize", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^  static async initialize() {$/", "language": "JavaScript", "kind": "method", "signature": "()", "scope": "UserModel", "scopeKind": "class"}, {"_type": "tag", "name": "isVerified", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^      isVerified: userData.isVerified !== undefined ? userData.isVerified : false,$/", "language": "JavaScript", "kind": "property", "scope": "UserModel.createUser.newUser", "scopeKind": "class"}, {"_type": "tag", "name": "isWriting", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^let isWriting = false;$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "lastLogin", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^      lastLogin: null$/", "language": "JavaScript", "kind": "property", "scope": "UserModel.createUser.newUser", "scopeKind": "class"}, {"_type": "tag", "name": "newUser", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^    const newUser = {$/", "language": "JavaScript", "kind": "class", "scope": "UserModel.createUser", "scopeKind": "class"}, {"_type": "tag", "name": "password", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^      password: userData.password, \\/\\/ Should be pre-hashed$/", "language": "JavaScript", "kind": "property", "scope": "UserModel.createUser.newUser", "scopeKind": "class"}, {"_type": "tag", "name": "path", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^const path = require('path');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "resetPassword", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^  static async resetPassword(token, newPassword) {$/", "language": "JavaScript", "kind": "method", "signature": "(token, newPassword)", "scope": "UserModel", "scopeKind": "class"}, {"_type": "tag", "name": "resetToken", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^      resetToken: userData.resetToken || null,$/", "language": "JavaScript", "kind": "property", "scope": "UserModel.createUser.newUser", "scopeKind": "class"}, {"_type": "tag", "name": "resetTokenExpiry", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^      resetTokenExpiry: userData.resetTokenExpiry || null,$/", "language": "JavaScript", "kind": "property", "scope": "UserModel.createUser.newUser", "scopeKind": "class"}, {"_type": "tag", "name": "role", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^      role: userData.role || 'user',$/", "language": "JavaScript", "kind": "property", "scope": "UserModel.createUser.newUser", "scopeKind": "class"}, {"_type": "tag", "name": "searchUsers", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^  static async searchUsers(query) {$/", "language": "JavaScript", "kind": "method", "signature": "(query)", "scope": "UserModel", "scopeKind": "class"}, {"_type": "tag", "name": "setPasswordResetToken", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^  static async setPasswordResetToken(email, token, expiry) {$/", "language": "JavaScript", "kind": "method", "signature": "(email, token, expiry)", "scope": "UserModel", "scopeKind": "class"}, {"_type": "tag", "name": "updateUser", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^  static async updateUser(id, userData) {$/", "language": "JavaScript", "kind": "method", "signature": "(id, userData)", "scope": "UserModel", "scopeKind": "class"}, {"_type": "tag", "name": "updatedAt", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^      updatedAt: new Date().toISOString(),$/", "language": "JavaScript", "kind": "property", "scope": "UserModel.createUser.newUser", "scopeKind": "class"}, {"_type": "tag", "name": "username", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^      username: userData.username,$/", "language": "JavaScript", "kind": "property", "scope": "UserModel.createUser.newUser", "scopeKind": "class"}, {"_type": "tag", "name": "verificationToken", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^      verificationToken: userData.verificationToken || null,$/", "language": "JavaScript", "kind": "property", "scope": "UserModel.createUser.newUser", "scopeKind": "class"}, {"_type": "tag", "name": "verifyUser", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "pattern": "/^  static async verifyUser(token) {$/", "language": "JavaScript", "kind": "method", "signature": "(token)", "scope": "UserModel", "scopeKind": "class"}], "filename": "/home/kavia/workspace/Mock-E-commerce-32515/src/models/userModel.js", "hash": "328b39fdb4a6e11797ca3bae74dec301", "format-version": 4, "code-base-name": "default", "fields": [{"name": "createdAt: new Date().toISOString(),", "scope": "UserModel.createUser.newUser", "scopeKind": "class", "description": "unavailable"}, {"name": "email: userData.email.toLowerCase(), \\/\\/ Store email in lowercase for case-insensitive co/", "scope": "UserModel.createUser.newUser", "scopeKind": "class", "description": "unavailable"}, {"name": "id: uuidv4(),", "scope": "UserModel.createUser.newUser", "scopeKind": "class", "description": "unavailable"}, {"name": "isVerified: userData.isVerified !== undefined ? userData.isVerified : false,", "scope": "UserModel.createUser.newUser", "scopeKind": "class", "description": "unavailable"}, {"name": "let isWriting = false;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "lastLogin: null", "scope": "UserModel.createUser.newUser", "scopeKind": "class", "description": "unavailable"}, {"name": "password: userData.password, \\/\\/ Should be pre-hashed", "scope": "UserModel.createUser.newUser", "scopeKind": "class", "description": "unavailable"}, {"name": "resetToken: userData.resetToken || null,", "scope": "UserModel.createUser.newUser", "scopeKind": "class", "description": "unavailable"}, {"name": "resetTokenExpiry: userData.resetTokenExpiry || null,", "scope": "UserModel.createUser.newUser", "scopeKind": "class", "description": "unavailable"}, {"name": "role: userData.role || 'user',", "scope": "UserModel.createUser.newUser", "scopeKind": "class", "description": "unavailable"}, {"name": "updatedAt: new Date().toISOString(),", "scope": "UserModel.createUser.newUser", "scopeKind": "class", "description": "unavailable"}, {"name": "username: userData.username,", "scope": "UserModel.createUser.newUser", "scopeKind": "class", "description": "unavailable"}, {"name": "verificationToken: userData.verificationToken || null,", "scope": "UserModel.createUser.newUser", "scopeKind": "class", "description": "unavailable"}]}