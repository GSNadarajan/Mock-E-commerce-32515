{"is_source_file": true, "format": "JavaScript", "description": "OrderService module that handles order management functionalities, including creating, updating, validating orders, and integrating with user and product services.", "external_files": ["../orders/models/orderModel", "./userService", "./productService", "../utils/logger"], "external_methods": ["OrderModel.getOrderById", "OrderModel.getOrdersByUserId", "OrderModel.createOrder", "OrderModel.updateOrder", "OrderModel.getOrdersByStatus", "OrderModel.countOrdersByStatus", "userService.validateUser", "productService.getProductById", "productService.updateProductStock", "OrderModel.searchOrders"], "published": ["OrderService"], "classes": [{"name": "ServiceError", "description": "Base class for custom service-related errors."}, {"name": "ValidationError", "description": "Error class for validation-related issues in the service."}, {"name": "NotFoundError", "description": "Error class for cases where an entity is not found."}, {"name": "StockError", "description": "Error class for issues related to stock availability."}, {"name": "OrderService", "description": "Main class responsible for managing and processing orders."}], "methods": [{"name": "getOrderById(orderId)", "description": "Retrieves an order by its ID, throws NotFoundError if not found.", "scope": "OrderService", "scopeKind": "class"}, {"name": "getOrdersByUserId(userId)", "description": "Fetches orders associated with a specific user ID.", "scope": "OrderService", "scopeKind": "class"}, {"name": "validateOrderItems(items)", "description": "Validates order items before processing them.", "scope": "OrderService", "scopeKind": "class"}, {"name": "createOrder(orderData)", "description": "Creates a new order after validating the order data.", "scope": "OrderService", "scopeKind": "class"}, {"name": "updateOrderStatus(orderId, status, note)", "description": "Updates the status of an existing order.", "scope": "OrderService", "scopeKind": "class"}, {"name": "processOrder(orderId)", "description": "Changes the status of an order to processing.", "scope": "OrderService", "scopeKind": "class"}, {"name": "searchOrders(criteria = {})", "description": "Searches for orders based on various criteria.", "scope": "OrderService", "scopeKind": "class"}, {"name": "getOrdersByStatus(status)", "description": "Retrieves orders that match a specified status.", "scope": "OrderService", "scopeKind": "class"}, {"name": "countOrdersByStatus()", "description": "Counts the number of orders for each status.", "scope": "OrderService", "scopeKind": "class"}, {"name": "constructor(message, statusCode = 400, originalError = null)", "scope": "ValidationError", "scopeKind": "class", "description": "unavailable"}, {"name": "constructor(message, statusCode = 404, originalError = null)", "scope": "NotFoundError", "scopeKind": "class", "description": "unavailable"}, {"name": "constructor(message, statusCode = null, originalError = null)", "scope": "ServiceError", "scopeKind": "class", "description": "unavailable"}], "calls": ["OrderModel.getOrderById", "OrderModel.getOrdersByUserId", "OrderModel.createOrder", "OrderModel.updateOrder", "OrderModel.getOrdersByStatus", "OrderModel.countOrdersByStatus", "userService.validateUser", "productService.getProductById", "productService.updateProductStock"], "search-terms": ["OrderService", "ServiceError", "ValidationError", "NotFoundError", "StockError"], "state": 2, "file_id": 78, "knowledge_revision": 209, "git_revision": "085f36a3e3578950b41691b8c3269b04afc49f4a", "ctags": [{"_type": "tag", "name": "Logger", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/orderService.js", "pattern": "/^const Logger = require('..\\/utils\\/logger') || console;$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "NotFoundError", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/orderService.js", "pattern": "/^class NotFoundError extends ServiceError {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "OrderModel", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/orderService.js", "pattern": "/^const OrderModel = require('..\\/orders\\/models\\/orderModel');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "OrderService", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/orderService.js", "pattern": "/^class OrderService {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "ServiceError", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/orderService.js", "pattern": "/^class ServiceError extends Error {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "StockError", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/orderService.js", "pattern": "/^class StockError extends ServiceError {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "ValidationError", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/orderService.js", "pattern": "/^class ValidationError extends ServiceError {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "constructor", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/orderService.js", "pattern": "/^  constructor(message, statusCode = 400, originalError = null) {$/", "language": "JavaScript", "kind": "method", "signature": "(message, statusCode = 400, originalError = null)", "scope": "StockError", "scopeKind": "class"}, {"_type": "tag", "name": "constructor", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/orderService.js", "pattern": "/^  constructor(message, statusCode = 400, originalError = null) {$/", "language": "JavaScript", "kind": "method", "signature": "(message, statusCode = 400, originalError = null)", "scope": "ValidationError", "scopeKind": "class"}, {"_type": "tag", "name": "constructor", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/orderService.js", "pattern": "/^  constructor(message, statusCode = 404, originalError = null) {$/", "language": "JavaScript", "kind": "method", "signature": "(message, statusCode = 404, originalError = null)", "scope": "NotFoundError", "scopeKind": "class"}, {"_type": "tag", "name": "constructor", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/orderService.js", "pattern": "/^  constructor(message, statusCode = null, originalError = null) {$/", "language": "JavaScript", "kind": "method", "signature": "(message, statusCode = null, originalError = null)", "scope": "ServiceError", "scopeKind": "class"}, {"_type": "tag", "name": "countOrdersByStatus", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/orderService.js", "pattern": "/^  async countOrdersByStatus() {$/", "language": "JavaScript", "kind": "method", "signature": "()", "scope": "OrderService", "scopeKind": "class"}, {"_type": "tag", "name": "createOrder", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/orderService.js", "pattern": "/^  async createOrder(orderData) {$/", "language": "JavaScript", "kind": "method", "signature": "(orderData)", "scope": "OrderService", "scopeKind": "class"}, {"_type": "tag", "name": "exports", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/orderService.js", "pattern": "/^module.exports = new OrderService();$/", "language": "JavaScript", "kind": "variable", "scope": "module", "scopeKind": "class"}, {"_type": "tag", "name": "getOrderById", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/orderService.js", "pattern": "/^  async getOrderById(orderId) {$/", "language": "JavaScript", "kind": "method", "signature": "(orderId)", "scope": "OrderService", "scopeKind": "class"}, {"_type": "tag", "name": "getOrdersByStatus", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/orderService.js", "pattern": "/^  async getOrdersByStatus(status) {$/", "language": "JavaScript", "kind": "method", "signature": "(status)", "scope": "OrderService", "scopeKind": "class"}, {"_type": "tag", "name": "getOrdersByUserId", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/orderService.js", "pattern": "/^  async getOrdersByUserId(userId) {$/", "language": "JavaScript", "kind": "method", "signature": "(userId)", "scope": "OrderService", "scopeKind": "class"}, {"_type": "tag", "name": "processOrder", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/orderService.js", "pattern": "/^  async processOrder(orderId) {$/", "language": "JavaScript", "kind": "method", "signature": "(orderId)", "scope": "OrderService", "scopeKind": "class"}, {"_type": "tag", "name": "productService", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/orderService.js", "pattern": "/^const productService = require('.\\/productService');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "searchOrders", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/orderService.js", "pattern": "/^  async searchOrders(criteria = {}) {$/", "language": "JavaScript", "kind": "method", "signature": "(criteria = {})", "scope": "OrderService", "scopeKind": "class"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/orderService.js", "pattern": "/^      const updateData = { status };$/", "language": "JavaScript", "kind": "field", "scope": "OrderService.updateOrderStatus.updateData", "scopeKind": "class"}, {"_type": "tag", "name": "updateOrderStatus", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/orderService.js", "pattern": "/^  async updateOrderStatus(orderId, status, note) {$/", "language": "JavaScript", "kind": "method", "signature": "(orderId, status, note)", "scope": "OrderService", "scopeKind": "class"}, {"_type": "tag", "name": "userService", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/orderService.js", "pattern": "/^const userService = require('.\\/userService');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "validateOrderItems", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/orderService.js", "pattern": "/^  async validateOrderItems(items) {$/", "language": "JavaScript", "kind": "method", "signature": "(items)", "scope": "OrderService", "scopeKind": "class"}], "filename": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/orderService.js", "hash": "af67ba5e74dfe8250175e5166e332b8f", "format-version": 4, "code-base-name": "default", "fields": [{"name": "module.exports = new OrderService();", "scope": "module", "scopeKind": "class", "description": "unavailable"}, {"name": "const updateData = { status };", "scope": "OrderService.updateOrderStatus.updateData", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"209": "085f36a3e3578950b41691b8c3269b04afc49f4a"}]}