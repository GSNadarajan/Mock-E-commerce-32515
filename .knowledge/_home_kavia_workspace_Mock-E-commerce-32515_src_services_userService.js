{"is_source_file": true, "format": "JavaScript", "description": "A service module that handles user-related operations, including fetching user data, validating users, and managing user roles and errors.", "external_files": ["../models/userModel", "../utils/logger"], "external_methods": ["UserModel.getUserById", "UserModel.getUserByEmail", "UserModel.searchUsers", "UserModel.findUsersByRole", "UserModel.countUsers"], "published": ["UserService"], "classes": [{"name": "ServiceError", "description": "Custom error class that extends the standard Error class, including additional properties for better error handling."}, {"name": "ValidationError", "description": "Error class for validation failures, inherits from ServiceError."}, {"name": "NotFoundError", "description": "Error class for not found cases, inherits from ServiceError."}, {"name": "AuthenticationError", "description": "Error class for authentication failures, inherits from ServiceError."}, {"name": "UserService", "description": "Service class that provides methods to interact with user data and handle user-related functionality."}], "methods": [{"name": "getUserById(userId)", "description": "Fetches user data by user ID, returns sanitized user data or throws NotFoundError if not found.", "scope": "UserService", "scopeKind": "class"}, {"name": "validateUser(userId)", "description": "Checks if a user exists by user ID and returns a boolean value.", "scope": "UserService", "scopeKind": "class"}, {"name": "isAdmin(userId)", "description": "Checks if the user has an admin role by user ID and returns a boolean value.", "scope": "UserService", "scopeKind": "class"}, {"name": "getUserByEmail(email)", "description": "Fetches user data by user email, returns sanitized user data or throws NotFoundError if not found.", "scope": "UserService", "scopeKind": "class"}, {"name": "searchUsers(query)", "description": "Searches for users by username or email and returns a list of matching users.", "scope": "UserService", "scopeKind": "class"}, {"name": "findUsersByRole(role)", "description": "Finds users by their role and returns a list of users with that role.", "scope": "UserService", "scopeKind": "class"}, {"name": "countUsers()", "description": "Counts the total number of users and returns the count.", "scope": "UserService", "scopeKind": "class"}, {"name": "constructor(message, statusCode = 400, originalError = null)", "scope": "ValidationError", "scopeKind": "class", "description": "unavailable"}, {"name": "constructor(message, statusCode = 401, originalError = null)", "scope": "AuthenticationError", "scopeKind": "class", "description": "unavailable"}, {"name": "constructor(message, statusCode = 404, originalError = null)", "scope": "NotFoundError", "scopeKind": "class", "description": "unavailable"}, {"name": "constructor(message, statusCode = null, originalError = null)", "scope": "ServiceError", "scopeKind": "class", "description": "unavailable"}], "calls": ["Logger.error", "Logger.warn"], "search-terms": ["UserService", "ServiceError", "ValidationError", "NotFoundError", "AuthenticationError"], "state": 2, "file_id": 76, "knowledge_revision": 207, "git_revision": "085f36a3e3578950b41691b8c3269b04afc49f4a", "ctags": [{"_type": "tag", "name": "AuthenticationError", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/userService.js", "pattern": "/^class AuthenticationError extends ServiceError {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "Logger", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/userService.js", "pattern": "/^const Logger = require('..\\/utils\\/logger') || console;$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "NotFoundError", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/userService.js", "pattern": "/^class NotFoundError extends ServiceError {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "ServiceError", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/userService.js", "pattern": "/^class ServiceError extends Error {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "UserModel", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/userService.js", "pattern": "/^const UserModel = require('..\\/models\\/userModel');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "UserService", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/userService.js", "pattern": "/^class UserService {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "ValidationError", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/userService.js", "pattern": "/^class ValidationError extends ServiceError {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "constructor", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/userService.js", "pattern": "/^  constructor(message, statusCode = 400, originalError = null) {$/", "language": "JavaScript", "kind": "method", "signature": "(message, statusCode = 400, originalError = null)", "scope": "ValidationError", "scopeKind": "class"}, {"_type": "tag", "name": "constructor", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/userService.js", "pattern": "/^  constructor(message, statusCode = 401, originalError = null) {$/", "language": "JavaScript", "kind": "method", "signature": "(message, statusCode = 401, originalError = null)", "scope": "AuthenticationError", "scopeKind": "class"}, {"_type": "tag", "name": "constructor", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/userService.js", "pattern": "/^  constructor(message, statusCode = 404, originalError = null) {$/", "language": "JavaScript", "kind": "method", "signature": "(message, statusCode = 404, originalError = null)", "scope": "NotFoundError", "scopeKind": "class"}, {"_type": "tag", "name": "constructor", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/userService.js", "pattern": "/^  constructor(message, statusCode = null, originalError = null) {$/", "language": "JavaScript", "kind": "method", "signature": "(message, statusCode = null, originalError = null)", "scope": "ServiceError", "scopeKind": "class"}, {"_type": "tag", "name": "countUsers", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/userService.js", "pattern": "/^  async countUsers() {$/", "language": "JavaScript", "kind": "method", "signature": "()", "scope": "UserService", "scopeKind": "class"}, {"_type": "tag", "name": "exports", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/userService.js", "pattern": "/^module.exports = new UserService();$/", "language": "JavaScript", "kind": "variable", "scope": "module", "scopeKind": "class"}, {"_type": "tag", "name": "findUsersByRole", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/userService.js", "pattern": "/^  async findUsersByRole(role) {$/", "language": "JavaScript", "kind": "method", "signature": "(role)", "scope": "UserService", "scopeKind": "class"}, {"_type": "tag", "name": "getUserByEmail", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/userService.js", "pattern": "/^  async getUserByEmail(email) {$/", "language": "JavaScript", "kind": "method", "signature": "(email)", "scope": "UserService", "scopeKind": "class"}, {"_type": "tag", "name": "getUserById", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/userService.js", "pattern": "/^  async getUserById(userId) {$/", "language": "JavaScript", "kind": "method", "signature": "(userId)", "scope": "UserService", "scopeKind": "class"}, {"_type": "tag", "name": "isAdmin", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/userService.js", "pattern": "/^  async isAdmin(userId) {$/", "language": "JavaScript", "kind": "method", "signature": "(userId)", "scope": "UserService", "scopeKind": "class"}, {"_type": "tag", "name": "searchUsers", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/userService.js", "pattern": "/^  async searchUsers(query) {$/", "language": "JavaScript", "kind": "method", "signature": "(query)", "scope": "UserService", "scopeKind": "class"}, {"_type": "tag", "name": "validateUser", "path": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/userService.js", "pattern": "/^  async validateUser(userId) {$/", "language": "JavaScript", "kind": "method", "signature": "(userId)", "scope": "UserService", "scopeKind": "class"}], "filename": "/home/kavia/workspace/Mock-E-commerce-32515/src/services/userService.js", "hash": "49afd1e230979048f6f559a7dc603289", "format-version": 4, "code-base-name": "default", "fields": [{"name": "module.exports = new UserService();", "scope": "module", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"207": "085f36a3e3578950b41691b8c3269b04afc49f4a"}]}